select * from [dbo].[TABELA DE CLIENTES]
select * from [dbo].[ITENS NOTAS FISCAIS]
select * from [dbo].[NOTAS FISCAIS]

/************** primeira informação: quanto que cada cliente comprou no mês, é a .********/
/*1   unir as tabelas*/
SELECT * FROM [dbo].[NOTAS FISCAIS] NF
INNER JOIN [dbo].[ITENS NOTAS FISCAIS] INF
ON NF. NUMERO = INF.NUMERO

/*1.2   agora, eu preciso agrupar esse cara por mês e ano, e saber o total que cada cliente comprou, 
        porque esse valor é que eu vou comparar com o cadastro dele lá na tabela de clientes. Eu preciso 
		fazer um GROUP BY somando as quantidades vendidas, para eu apurar quanto cada cliente comprou 
		dentro do mês.
		
		ITENS IMPORTANTES*/

SELECT NF.CPF, NF.DATA, INF.QUANTIDADE FROM [dbo].[NOTAS FISCAIS] NF
INNER JOIN [dbo].[ITENS NOTAS FISCAIS] INF
ON NF. NUMERO = INF.NUMERO

/*CONVERTENDO A DATA*/
SELECT NF.CPF, CONVERT(VARCHAR, NF.DATA, 120) AS DATA_CONVERTIDA,
 INF.QUANTIDADE FROM [dbo].[NOTAS FISCAIS] NF
INNER JOIN [dbo].[ITENS NOTAS FISCAIS] INF
ON NF. NUMERO = INF.NUMERO

/* SEPARANDO ANO E MES*/
SELECT NF.CPF,SUBSTRING( CONVERT(VARCHAR, NF.DATA, 120),1,7) AS ANO_MES,
 INF.QUANTIDADE FROM [dbo].[NOTAS FISCAIS] NF
INNER JOIN [dbo].[ITENS NOTAS FISCAIS] INF
ON NF. NUMERO = INF.NUMERO

/*Eu não preciso ter o valor das vendas totais dentro do mês? Então preciso grupar esse cara, usando 
como GROUP BY o CPF e o ANO_MES, e usando sobre quantidade a função SUM.*/

SELECT NF.CPF,SUBSTRING( CONVERT(VARCHAR, NF.DATA, 120),1,7) AS ANO_MES,
SUM( INF.QUANTIDADE) QUANTIDADE_MES FROM [dbo].[NOTAS FISCAIS] NF
INNER JOIN [dbo].[ITENS NOTAS FISCAIS] INF
ON NF. NUMERO = INF.NUMERO
GROUP BY NF.CPF,SUBSTRING( CONVERT(VARCHAR, NF.DATA, 120),1,7)

/*Mas claro que no meu relatório não é legal eu ter CPF. É legal eu trazer o nome do cliente e preciso, 
também, já que eu vou fazer agora um JOIN lá com a minha tabela de clientes, é legal que eu traga o 
nome do cliente e traga, também, o valor da compra máxima que o cliente pode fazer dentro do mês.*/

SELECT  TC.NOME, TC.[VOLUME DE COMPRA] FROM [dbo].[TABELA DE CLIENTES] TC

/************Subqueries, subconsultas*/
/*nomeando a tabela */

SELECT ConsQuant.ANO_MES, ConsQuant.QUANTIDADE_MES 
FROM 
(SELECT NF.CPF,SUBSTRING( CONVERT(VARCHAR, NF.DATA, 120),1,7) AS ANO_MES,
SUM( INF.QUANTIDADE) QUANTIDADE_MES FROM [dbo].[NOTAS FISCAIS] NF
INNER JOIN [dbo].[ITENS NOTAS FISCAIS] INF
ON NF. NUMERO = INF.NUMERO
GROUP BY NF.CPF,SUBSTRING( CONVERT(VARCHAR, NF.DATA, 120),1,7)) ConsQuant 

/*JUNTANDO SUBQUERI E TABELA DE CLIENTES*/

SELECT TC.NOME, ConsQuant.ANO_MES, ConsQuant.QUANTIDADE_MES , TC.[VOLUME DE COMPRA]
FROM 
(SELECT NF.CPF,SUBSTRING( CONVERT(VARCHAR, NF.DATA, 120),1,7) AS ANO_MES,
SUM( INF.QUANTIDADE) QUANTIDADE_MES FROM [dbo].[NOTAS FISCAIS] NF
INNER JOIN [dbo].[ITENS NOTAS FISCAIS] INF
ON NF. NUMERO = INF.NUMERO
GROUP BY NF.CPF,SUBSTRING( CONVERT(VARCHAR, NF.DATA, 120),1,7)) ConsQuant 
INNER JOIN [dbo].[TABELA DE CLIENTES] TC
ON TC.CPF = ConsQuant.CPF

/**********CASSIFICAÇÃO Quando a quantidade mês estiver menor do que o volume compra, a venda foi 
    válida. Quando ela foi maior como, por exemplo, nessa linha aqui, ela não foi válida.*/

/*OUTRA SUBQUERY*/
SELECT AUX1.NOME, AUX1.ANO_MES, AUX1.QUANTIDADE_MES,
CASE WHEN AUX1.QUANTIDADE_MES <= AUX1.[VOLUME DE COMPRA] THEN 'VENDA VÁLIDA'
WHEN  AUX1.QUANTIDADE_MES > AUX1.[VOLUME DE COMPRA] THEN 'VENDA INVÁLIDA'
END AS STATUS_VENDA 
FROM
(SELECT TC.NOME, ConsQuant.ANO_MES, ConsQuant.QUANTIDADE_MES , TC.[VOLUME DE COMPRA]
FROM 
(SELECT NF.CPF,SUBSTRING( CONVERT(VARCHAR, NF.DATA, 120),1,7) AS ANO_MES,
SUM( INF.QUANTIDADE) QUANTIDADE_MES FROM [dbo].[NOTAS FISCAIS] NF
INNER JOIN [dbo].[ITENS NOTAS FISCAIS] INF
ON NF. NUMERO = INF.NUMERO
GROUP BY NF.CPF,SUBSTRING( CONVERT(VARCHAR, NF.DATA, 120),1,7)) ConsQuant 
INNER JOIN [dbo].[TABELA DE CLIENTES] TC
ON TC.CPF = ConsQuant.CPF) AUX1

/*ORDENAR */
SELECT AUX1.NOME, AUX1.ANO_MES, AUX1.QUANTIDADE_MES,
CASE WHEN AUX1.QUANTIDADE_MES <= AUX1.[VOLUME DE COMPRA] THEN 'VENDA VÁLIDA'
WHEN  AUX1.QUANTIDADE_MES > AUX1.[VOLUME DE COMPRA] THEN 'VENDA INVÁLIDA'
END AS STATUS_VENDA 
FROM
(SELECT TC.NOME, ConsQuant.ANO_MES, ConsQuant.QUANTIDADE_MES , TC.[VOLUME DE COMPRA]
FROM 
(SELECT NF.CPF,SUBSTRING( CONVERT(VARCHAR, NF.DATA, 120),1,7) AS ANO_MES,
SUM( INF.QUANTIDADE) QUANTIDADE_MES FROM [dbo].[NOTAS FISCAIS] NF
INNER JOIN [dbo].[ITENS NOTAS FISCAIS] INF
ON NF. NUMERO = INF.NUMERO
GROUP BY NF.CPF,SUBSTRING( CONVERT(VARCHAR, NF.DATA, 120),1,7)) ConsQuant 
INNER JOIN [dbo].[TABELA DE CLIENTES] TC
ON TC.CPF = ConsQuant.CPF) AUX1
ORDER BY AUX1.NOME, AUX1.ANO_MES

/*Complemente este relatório, listando somente os que tiveram vendas inválidas e calculando a diferença 
entre o limite de venda máximo e o realizado, em percentuais.*/

SELECT AUX1.NOME, AUX1.ANO_MES, AUX1.[VOLUME DE COMPRA], AUX1.QUANTIDADE_MES, 
CONVERT(DECIMAL(15,2), ( (AUX1.QUANTIDADE_MES/AUX1.[VOLUME DE COMPRA]) - 1) * 100)  AS VARIACAO, 
CASE WHEN AUX1.QUANTIDADE_MES <= AUX1.[VOLUME DE COMPRA] THEN 'VENDA VÁLIDA'
WHEN AUX1.QUANTIDADE_MES > AUX1.[VOLUME DE COMPRA] THEN 'VENDA INVÁLIDA'
END AS STATUS_VENDA
FROM 
(SELECT TC.NOME, CQ.ANO_MES, CQ.QUANTIDADE_MES, TC.[VOLUME DE COMPRA]
FROM
(SELECT NF.CPF, SUBSTRING(CONVERT(VARCHAR, NF.[DATA], 120),1,7) AS ANO_MES, 
SUM(INF.QUANTIDADE) AS QUANTIDADE_MES  FROM [NOTAS FISCAIS] NF
INNER JOIN [ITENS NOTAS FISCAIS] INF
ON NF.NUMERO = INF.NUMERO 
GROUP BY NF.CPF, SUBSTRING(CONVERT(VARCHAR, NF.[DATA], 120),1,7)) CQ
INNER JOIN [TABELA DE CLIENTES] TC ON TC.CPF = CQ.CPF) AUX1
WHERE  AUX1.QUANTIDADE_MES > AUX1.[VOLUME DE COMPRA] 
ORDER BY AUX1.NOME, AUX1.ANO_MES